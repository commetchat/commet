
name: release
on:
  release:
    types:
      - created

env:
  PROJECT_PATH: commet

jobs:
  release-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: 'true'
        
      - name: Setup Flutter
        uses: subosito/flutter-action@v2.8.0
        with:
          flutter-version: '3.13.1'
          channel: 'stable'

      - name: Clone Olm
        run: git clone https://gitlab.matrix.org/matrix-org/olm.git

      - name: Build Olm
        run: |
          cd ./olm
          cmake -DCMAKE_BUILD_TYPE=Release . -A x64 -Bbuild
          cmake --build build --config Release

      - name: Configure Flutter
        run: flutter config --enable-windows-desktop
        
      - name: Code Generation
        run: |
          cd .\commet
          .\scripts\codegen.bat

      - name: Build Windows App
        run: |
          set version=${{ github.event.release.tag_name || 'v0.0.0' }}
          set version=%version:~1%
          cd .\commet
          flutter build windows --build-name=%version% --dart-define BUILD_MODE=release --dart-define PLATFORM=windows --release --dart-define GIT_HASH=${{ github.sha }} --dart-define VERSION_TAG=${{ github.event.release.tag_name || 'v0.0.0' }}

      - name: Include libolm
        run: |
          dir
          dir .\olm
          dir .\commet
          dir .\commet\build\windows
          move .\olm\build\Release\olm.dll .\commet\build\windows\runner\Release\libolm.dll
      
      - name: Archive 
        run: tar -a -c -f commet-windows.zip -C .\commet\build\windows\runner\ Release
      
      - name: Upload to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: .\commet-windows.zip
          asset_name: commet-windows.zip
          asset_content_type: application/zip


  release-android:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: 'true'
        
      - name: Setup Flutter 
        uses: subosito/flutter-action@v2.8.0
        with:
          flutter-version: '3.13.1'
          channel: 'stable'

      - name: Setup Java
        uses: actions/setup-java@v1
        with:
          java-version: 17

      - name: Setup Tools
        run: |
          sudo apt-get update -y
          sudo apt-get install -y ninja-build libgtk-3-dev libolm3 libmpv-dev mpv ffmpeg
        
      - name: Code Generation
        run: |
          cd $PROJECT_PATH
          scripts/codegen.sh
          
      - name: Build APK
        run: |
          version=${{ github.event.release.tag_name || 'v0.0.0' }}
          version=$(echo $version | perl -pe '($_)=/([0-9]+([.][0-9]+)+)/')
          cd $PROJECT_PATH
          flutter build apk --build-name=$version --dart-define BUILD_MODE=release --dart-define PLATFORM=android --release --dart-define GIT_HASH=${{ github.sha }} --dart-define VERSION_TAG=${{ github.event.release.tag_name || 'v0.0.0' }}
          
      - name: Upload to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: commet/build/app/outputs/flutter-apk/app-release.apk
          asset_name: commet-android.apk
          asset_content_type: application/vnd.android.package-archive

  release-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: 'true'
        
      - name: Setup Flutter 
        uses: subosito/flutter-action@v2.8.0
        with:
          flutter-version: '3.13.1'
          channel: 'stable'

      - name: Setup Tools
        run: |
          sudo apt-get update -y
          sudo apt-get install -y ninja-build libgtk-3-dev libolm3 libmpv-dev mpv ffmpeg
        
      - name: Code Generation
        run: |
          cd $PROJECT_PATH
          scripts/codegen.sh
          
      - name: Build Linux
        run: |
          version=${{ github.event.release.tag_name || 'v0.0.0' }}
          version=$(echo $version | perl -pe '($_)=/([0-9]+([.][0-9]+)+)/')
          cd $PROJECT_PATH
          flutter build linux --build-name=$version --dart-define BUILD_MODE=release --dart-define PLATFORM=linux --release --dart-define GIT_HASH=${{ github.sha }} --dart-define VERSION_TAG=${{ github.event.release.tag_name || 'v0.0.0' }} --dart-define BUILD_DETAIL=linux-x64 --target-platform linux-x64

      - name: Create archive
        run: |
          cd $PROJECT_PATH/build/linux/x64/release
          tar -czf commet-linux-x64.tar.gz bundle
      
      - name: Upload to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: commet/build/linux/x64/release/commet-linux-x64.tar.gz
          asset_name: commet-linux-x64.tar.gz
          asset_content_type: application/gzip

  release-web:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: 'true'
        
      - name: Setup Flutter 
        uses: subosito/flutter-action@v2.8.0
        with:
          flutter-version: '3.13.1'
          channel: 'stable'

      - name: Setup Tools
        run: |
          sudo apt-get update -y
          sudo apt-get install -y ninja-build libgtk-3-dev libolm3 libmpv-dev mpv ffmpeg
        
      - name: Code Generation
        run: |
          cd $PROJECT_PATH
          scripts/codegen.sh
          
      - name: Build Web
        run: |
          cd $PROJECT_PATH
          flutter build web --dart-define BUILD_MODE=release --dart-define PLATFORM=web --release --dart-define GIT_HASH=${{ github.sha }} --dart-define VERSION_TAG=${{ github.event.release.tag_name || 'v0.0.0' }}
      
      - name: Create archive
        run: |
          cd $PROJECT_PATH/build
          tar -czf commet-web.tar.gz web
      
      - name: Upload to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: commet/build/commet-web.tar.gz
          asset_name: commet-web.tar.gz
          asset_content_type: application/gzip